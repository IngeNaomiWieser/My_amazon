<div class="container">
  <h1><%= @product.title  %></h1>
  <p><%= @product.description  %></p>
  <p>$<%= '%.2f' % @product.price  %></p>
  <p><%= @product.created_at  %></p>

  <p>Tags: <%= @product.tags.map{|tag| link_to tag.name, tag_path(tag)}.join(', ').html_safe %> </p>

  <!-- We do the &. (safe navigation operator) to make sure that we only look for
  the name when there is a category / user. If category / user is nill, it will
  return nill instead of an undefined method error. This means we don't have to write
  if (if... exists, do this...)statements. This is shorter and easier to read -->
  <p><strong>Category:</strong> <%= @product.category&.name %></p>
  <p><strong>Author:</strong> <%= @product.user&.full_name %></p>

  <!-- <%# if @favourite.present? %> -->
  <!-- <%# favourite = @product.favourites.find_by(user: current_user) %> -->

  <% if user_signed_in?  && can?(:favourite, @product)%>
    <% if @favourite.present? %>
      <%= link_to '', product_favourite_path(@product, @favourite), method: :delete, class: 'glyphicon glyphicon-heart text-danger' %>
    <% else %>
      <%= link_to '', product_favourites_path(@product), method: :post, class: 'glyphicon glyphicon-heart-empty text-danger' %>
    <% end %>
  <% end %>

  <%#= pluralize @product.likes.count, 'favourite' %>

  <% if (can? :edit, @product) %>
    <%= link_to 'Edit', edit_product_path(@product), class: 'btn btn-info' %>
  <% end %>

  <% if (can? :destroy, @product) %>
    <%= link_to 'Delete', product_path(@product),
                        method: :delete,
                        data: { confirm: 'Are you sure?'} , class: 'btn btn-danger' %>
  <% end %>

  <% if current_user != @product.user %>
    <h2>Reviews</h2>
    <% if @review.errors.any? %>
      <%= @review.errors.full_messages.join(', ') %>
    <% end %>

  <div class="well">
    <%= bootstrap_form_for([@product, @review]) do |f| %>
      <%= f.text_area :body %>
      <%= f.text_field :rating %>
      <%= f.submit :submit %>
    <% end %>
  </div>
  <% end %>


  <% @product.reviews.each do |review| %>
    <p><strong>Author:</strong> <%= review.user&.full_name %></p>
    <p><%= review.body %></p>
    <p><%= review.rating %></p>

    <!-- <% like = review.likes.find_by(user: current_user) %> -->

    <% if user_signed_in?  && can?(:favourite, @product)%>
      <% if like %>
        <%= link_to '', review_like_path(review, like), method: :delete, class: 'glyphicon glyphicon-heart text-danger' %>
      <% else %>
        <%= link_to '', review_likes_path(review), method: :post, class: 'glyphicon glyphicon-heart-empty text-danger' %>
      <% end %>
    <% end %>

    (<%= pluralize review.likes.count, 'like' %>)

    <%= review_voter review, review.votes.find_by(user: current_user) %>

    <% if can? :destroy, review %>
      <%= link_to 'Delete review',
        [@product, review], method: :delete,
        data: { confirm: 'Are you sure?'}, class: 'btn btn-danger pull-right'
      %>
    <% end %>
    <hr />
  <% end %>
  </div>
</div>
